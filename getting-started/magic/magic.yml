# Copyright (C) 2018  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

version: '2'

services:
    # For local debugging purposes of magic.py, we need to decode an h264 frames
    # from our playback session.
    # This is NOT needed on Kiwi as opendlv-device-camera-rpi provides the raw frame.
    video-h264-decoder-amd64:
        container_name: h264-decoder
        build:
            context: https://github.com/chalmers-revere/opendlv-video-h264-decoder.git
            dockerfile: Dockerfile.amd64
        restart: on-failure
        network_mode: "host"
        ipc: "host"
        volumes:
        - /tmp:/tmp
        environment:
        - DISPLAY=$DISPLAY
        command: "--cid=113 --name=img.argb"


    # This is the magic Python script.
    magic-amd64:
        container_name: magic
        build:
            context: .
            dockerfile: Dockerfile.amd64
        restart: on-failure
        network_mode: "host"
        ipc: "host"
        volumes:
        - /tmp:/tmp
        environment:
        - DISPLAY=$DISPLAY


    # This microservice transforms the debug image image from the magic Python
    # script into an I420 (YUV420) representation to be encoded into h264 for
    # network transport.
    argb2i420:
        container_name: argb2i420
        image: chalmersrevere/argb2i420-multi:v0.0.1
        restart: on-failure
        ipc: "host"
        volumes:
        - /tmp:/tmp
        command: "--in=debug.argb --width=640 --height=480 --argb --out=imgout.i420"


    # This microservice encodes the I420 image in shared memory as h264 frame.
    video-x264-encoder-amd64:
        container_name: x264-encoder
        build:
            context: https://github.com/chalmers-revere/opendlv-video-x264-encoder.git
            dockerfile: Dockerfile.amd64
        restart: always
        network_mode: "host"
        ipc: "host"
        volumes:
        - /tmp:/tmp
        command: "--cid=112 --name=imgout.i420 --width=640 --height=480"


    # This microservice provides the webapp.
    opendlv-vehicle-view-amd64:
        container_name: opendlv-vehicle-view
        image: chalmersrevere/opendlv-kiwi-view-multi:v0.0.3
        restart: on-failure
        network_mode: "host"
        volumes:
        - ~/recordings:/opt/vehicle-view/recordings
        - /var/run/docker.sock:/var/run/docker.sock
        environment:
        - OD4SESSION_CID=112
        ports:
        - "8081:8081"

